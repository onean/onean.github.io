<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[RebaseVS.Merge]]></title>
    <url>%2F2018%2F01%2F23%2FRebaseVS.Merge%2F</url>
    <content type="text"><![CDATA[Rebase vs. MergeNow that you’ve seen rebasing and merging in action, you may be wondering which one is better. Before we can answer this, let’s step back a bit and talk about what history means. One point of view on this is that your repository’s commit history is a record of what actually happened.It’s a historical document, valuable in its own right, and shouldn’t be tampered with. From this angle, changing the commit history is almost blasphemous; you’re lying about what actually transpired. So what if there was a messy series of merge commits? That’s how it happened, and the repository should preserve that for posterity. The opposing point of view is that the commit history is the story of how your project was made. You wouldn’t publish the first draft of a book, and the manual for how to maintain your software deserves careful editing. This is the camp that uses tools like rebase and filter-branch to tell the story in the way that’s best for future readers. Now, to the question of whether merging or rebasing is better: hopefully you’ll see that it’s not that simple. Git is a powerful tool, and allows you to do many things to and with your history, but every team and every project is different. Now that you know how both of these things work, it’s up to you to decide which one is best for your particular situation. In general the way to get the best of both worlds is to rebase local changes you’ve made but haven’t shared yet before you push them in order to clean up your story, but never rebase anything you’ve pushed somewhere.]]></content>
  </entry>
  <entry>
    <title><![CDATA[安装和使用Cocoapods]]></title>
    <url>%2F2018%2F01%2F23%2F%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8Cocoapods%2F</url>
    <content type="text"><![CDATA[升级Ruby环境 终端输入： 1$sudo gem update --system 安装CocoaPods要访问cocoapods.org,该网站已经被天朝墙壁，需要更换镜像来安装 1231、gem sources --remove https://rubygems.org/2、gem sources -a https://gems.ruby-china.org/3、gem sources -l 安装Cocoapods 1sudo gem install cocoapods ​ 常见问题（不定期更新）pod install 或者pod update 速度慢的问题 12345如果ruby源已更换为淘宝镜像，则原因可能是：当执行以上两个命令时会升级Cocoapods的Specs仓库，加一个参数就可以省略这一步，然后速度可能会提升。参数命令如下：pod install --verbose --no-repo-updatepod update --verbose --no-repo-update 执行完命令以后有时还是会报错，不妨更新一下本地repopod repo update “podfile.lock” not such file or directory…… 123456789101112方法一： rm -rf MyProject.xcworkspace pod install方法二： 关闭Xcode，重新执行pod install，之后运行Xcode方法三： 删除以下文件 xcworkspace Podfile.lock Pods文件夹 ~/Library/Developer/Xcode/DerivedData路径下对应工程的文件夹 执行pod install，之后运行Xcode 如果以上三种方法不能解决问题，继续看 方法四： 1、设置Configurations 2、选中Project-&gt;选择Info tab-&gt;看看Configurations是不是被设置为 None了，如果是None的话请改为Pods 3、修改Pods脚本文件路径 4、右键工程根目录下的xxx.xcodeproj文件，显示包内容 5、双击打开project.pbxproj文件 6、查找&quot;Pods-resources.sh&quot;, 找到shellScript，把路径修改为对应的值 中的路径 解决Unable to add a source with url https://github.com/CocoaPods/Specs.git named 123451、pod repo add master https://github.com/CocoaPods/Specs.git2、根据提示执行 pod setup3、如果出现 [!] The `master` repo is not a git repo. 进入/users/你的用户名/.cocoapods/repos，删除master文件夹 然后执行pod setup 如果是安装多个Xcdoe，还需要选择Xcode的路径 1sudo xcode-select -switch /Applications/Xcode.app/ 在终端里输入下方命令可以知道Xcode的路径： 1xcode-select -p 如果还出现问题 123sudo gem install -n /usr/local/bin cocoapods之后pod setup 网上有人说需要执行这行代码 Git clone https://git.coding.net/CocoaPods/Specs.git ~/.cocoapods/repos/master fatal: The remote end hung up unexpectedly error: RPC failed; curl 18 transfer closed with outstanding read data remaining 123git config --global http.postBuffer 524288000需要注意的是http.postBuffer 后，单位是b，524288000B也就500M左右]]></content>
  </entry>
  <entry>
    <title><![CDATA[MacOS事件监听]]></title>
    <url>%2F2018%2F01%2F10%2FMacOS%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%2F</url>
    <content type="text"><![CDATA[MacOS开发过程中需要设置快捷键完成对某些点击事件的监听，在Events.h中有所有按键对应的枚举值ile: HIToolbox/Events.h Contains: Event Manager Interfaces. Copyright: � 1985-2008 by Apple Computer, Inc., all rights reserved Bugs?: For bug reports, consult the following page on the World Wide Web: http://developer.apple.com/bugreporter/ */#ifndef __EVENTS__#define __EVENTS__#ifndef __APPLICATIONSERVICES__#include &lt;ApplicationServices/ApplicationServices.h&gt;#endif#include &lt;AvailabilityMacros.h&gt;#if PRAGMA_ONCE#pragma once#endif#ifdef __cplusplusextern &quot;C&quot; &#123;#endif#pragma pack(push, 2)typedef UInt16 EventKind;typedef UInt16 EventMask;enum &#123; nullEvent = 0, mouseDown = 1, mouseUp = 2, keyDown = 3, keyUp = 4, autoKey = 5, updateEvt = 6, diskEvt = 7, /* Not sent in Carbon. See kEventClassVolume in CarbonEvents.h*/ activateEvt = 8, osEvt = 15, kHighLevelEvent = 23&#125;;enum &#123; mDownMask = 1 &lt;&lt; mouseDown, /* mouse button pressed*/ mUpMask = 1 &lt;&lt; mouseUp, /* mouse button released*/ keyDownMask = 1 &lt;&lt; keyDown, /* key pressed*/ keyUpMask = 1 &lt;&lt; keyUp, /* key released*/ autoKeyMask = 1 &lt;&lt; autoKey, /* key repeatedly held down*/ updateMask = 1 &lt;&lt; updateEvt, /* window needs updating*/ diskMask = 1 &lt;&lt; diskEvt, /* disk inserted*/ activMask = 1 &lt;&lt; activateEvt, /* activate/deactivate window*/ highLevelEventMask = 0x0400, /* high-level events (includes AppleEvents)*/ osMask = 1 &lt;&lt; osEvt, /* operating system events (suspend, resume)*/ everyEvent = 0xFFFF /* all of the above*/&#125;;enum &#123; charCodeMask = 0x000000FF, keyCodeMask = 0x0000FF00, adbAddrMask = 0x00FF0000, osEvtMessageMask = (UInt32)0xFF000000&#125;;enum &#123; /* OS event messages. Event (sub)code is in the high byte of the message field.*/ mouseMovedMessage = 0x00FA, suspendResumeMessage = 0x0001&#125;;enum &#123; resumeFlag = 1 /* Bit 0 of message indicates resume vs suspend*/&#125;;#if CALL_NOT_IN_CARBON/* convertClipboardFlag is not ever set under Carbon. This is because scrap conversion is *//* not tied to suspend/resume events any longer. Your application should instead use the *//* scrap promise mechanism and fulfill scrap requests only when your promise keeper proc *//* is called. If you need to know if the scrap has changed, you can cache the last *//* ScrapRef you received and compare it with the current ScrapRef */enum &#123; convertClipboardFlag = 2 /* Bit 1 in resume message indicates clipboard change*/&#125;;#endif /* CALL_NOT_IN_CARBON *//* CARBON ALERT! BATTLESTATIONS! The EventModifiers bits defined here are also used in the newer Carbon Event key modifiers parameters. There are two main differences: 1) The Carbon key modifiers parameter is a UInt32, not a UInt16. Never try to extract the key modifiers parameter from a Carbon Event into an EventModifiers type. You will probably get your stack trashed. 2) The Carbon key modifiers is just that: key modifiers. That parameter will never contain the button state bit.*/typedef UInt16 EventModifiers;enum &#123; /* modifiers */ activeFlagBit = 0, /* activate? (activateEvt and mouseDown)*/ btnStateBit = 7, /* state of button?*/ cmdKeyBit = 8, /* command key down?*/ shiftKeyBit = 9, /* shift key down?*/ alphaLockBit = 10, /* alpha lock down?*/ optionKeyBit = 11, /* option key down?*/ controlKeyBit = 12, /* control key down?*/ rightShiftKeyBit = 13, /* right shift key down? Not supported on Mac OS X.*/ rightOptionKeyBit = 14, /* right Option key down? Not supported on Mac OS X.*/ rightControlKeyBit = 15 /* right Control key down? Not supported on Mac OS X.*/&#125;;enum &#123; activeFlag = 1 &lt;&lt; activeFlagBit, btnState = 1 &lt;&lt; btnStateBit, cmdKey = 1 &lt;&lt; cmdKeyBit, shiftKey = 1 &lt;&lt; shiftKeyBit, alphaLock = 1 &lt;&lt; alphaLockBit, optionKey = 1 &lt;&lt; optionKeyBit, controlKey = 1 &lt;&lt; controlKeyBit, rightShiftKey = 1 &lt;&lt; rightShiftKeyBit, /* Not supported on Mac OS X.*/ rightOptionKey = 1 &lt;&lt; rightOptionKeyBit, /* Not supported on Mac OS X.*/ rightControlKey = 1 &lt;&lt; rightControlKeyBit /* Not supported on Mac OS X.*/&#125;;/* MacRoman character codes*/enum &#123; kNullCharCode = 0, kHomeCharCode = 1, kEnterCharCode = 3, kEndCharCode = 4, kHelpCharCode = 5, kBellCharCode = 7, kBackspaceCharCode = 8, kTabCharCode = 9, kLineFeedCharCode = 10, kVerticalTabCharCode = 11, kPageUpCharCode = 11, kFormFeedCharCode = 12, kPageDownCharCode = 12, kReturnCharCode = 13, kFunctionKeyCharCode = 16, kCommandCharCode = 17, /* glyph available only in system fonts*/ kCheckCharCode = 18, /* glyph available only in system fonts*/ kDiamondCharCode = 19, /* glyph available only in system fonts*/ kAppleLogoCharCode = 20, /* glyph available only in system fonts*/ kEscapeCharCode = 27, kClearCharCode = 27, kLeftArrowCharCode = 28, kRightArrowCharCode = 29, kUpArrowCharCode = 30, kDownArrowCharCode = 31, kSpaceCharCode = 32, kDeleteCharCode = 127, kBulletCharCode = 165, kNonBreakingSpaceCharCode = 202&#125;;/* useful Unicode code points*/enum &#123; kShiftUnicode = 0x21E7, /* Unicode UPWARDS WHITE ARROW*/ kControlUnicode = 0x2303, /* Unicode UP ARROWHEAD*/ kOptionUnicode = 0x2325, /* Unicode OPTION KEY*/ kCommandUnicode = 0x2318, /* Unicode PLACE OF INTEREST SIGN*/ kPencilUnicode = 0x270E, /* Unicode LOWER RIGHT PENCIL; actually pointed left until Mac OS X 10.3*/ kPencilLeftUnicode = 0xF802, /* Unicode LOWER LEFT PENCIL; available in Mac OS X 10.3 and later*/ kCheckUnicode = 0x2713, /* Unicode CHECK MARK*/ kDiamondUnicode = 0x25C6, /* Unicode BLACK DIAMOND*/ kBulletUnicode = 0x2022, /* Unicode BULLET*/ kAppleLogoUnicode = 0xF8FF /* Unicode APPLE LOGO*/&#125;;/* * Summary: * Virtual keycodes * * Discussion: * These constants are the virtual keycodes defined originally in * Inside Mac Volume V, pg. V-191. They identify physical keys on a * keyboard. Those constants with &quot;ANSI&quot; in the name are labeled * according to the key position on an ANSI-standard US keyboard. * For example, kVK_ANSI_A indicates the virtual keycode for the key * with the letter &apos;A&apos; in the US keyboard layout. Other keyboard * layouts may have the &apos;A&apos; key label on a different physical key; * in this case, pressing &apos;A&apos; will generate a different virtual * keycode. */enum &#123; kVK_ANSI_A = 0x00, kVK_ANSI_S = 0x01, kVK_ANSI_D = 0x02, kVK_ANSI_F = 0x03, kVK_ANSI_H = 0x04, kVK_ANSI_G = 0x05, kVK_ANSI_Z = 0x06, kVK_ANSI_X = 0x07, kVK_ANSI_C = 0x08, kVK_ANSI_V = 0x09, kVK_ANSI_B = 0x0B, kVK_ANSI_Q = 0x0C, kVK_ANSI_W = 0x0D, kVK_ANSI_E = 0x0E, kVK_ANSI_R = 0x0F, kVK_ANSI_Y = 0x10, kVK_ANSI_T = 0x11, kVK_ANSI_1 = 0x12, kVK_ANSI_2 = 0x13, kVK_ANSI_3 = 0x14, kVK_ANSI_4 = 0x15, kVK_ANSI_6 = 0x16, kVK_ANSI_5 = 0x17, kVK_ANSI_Equal = 0x18, kVK_ANSI_9 = 0x19, kVK_ANSI_7 = 0x1A, kVK_ANSI_Minus = 0x1B, kVK_ANSI_8 = 0x1C, kVK_ANSI_0 = 0x1D, kVK_ANSI_RightBracket = 0x1E, kVK_ANSI_O = 0x1F, kVK_ANSI_U = 0x20, kVK_ANSI_LeftBracket = 0x21, kVK_ANSI_I = 0x22, kVK_ANSI_P = 0x23, kVK_ANSI_L = 0x25, kVK_ANSI_J = 0x26, kVK_ANSI_Quote = 0x27, kVK_ANSI_K = 0x28, kVK_ANSI_Semicolon = 0x29, kVK_ANSI_Backslash = 0x2A, kVK_ANSI_Comma = 0x2B, kVK_ANSI_Slash = 0x2C, kVK_ANSI_N = 0x2D, kVK_ANSI_M = 0x2E, kVK_ANSI_Period = 0x2F, kVK_ANSI_Grave = 0x32, kVK_ANSI_KeypadDecimal = 0x41, kVK_ANSI_KeypadMultiply = 0x43, kVK_ANSI_KeypadPlus = 0x45, kVK_ANSI_KeypadClear = 0x47, kVK_ANSI_KeypadDivide = 0x4B, kVK_ANSI_KeypadEnter = 0x4C, kVK_ANSI_KeypadMinus = 0x4E, kVK_ANSI_KeypadEquals = 0x51, kVK_ANSI_Keypad0 = 0x52, kVK_ANSI_Keypad1 = 0x53, kVK_ANSI_Keypad2 = 0x54, kVK_ANSI_Keypad3 = 0x55, kVK_ANSI_Keypad4 = 0x56, kVK_ANSI_Keypad5 = 0x57, kVK_ANSI_Keypad6 = 0x58, kVK_ANSI_Keypad7 = 0x59, kVK_ANSI_Keypad8 = 0x5B, kVK_ANSI_Keypad9 = 0x5C&#125;;/* keycodes for keys that are independent of keyboard layout*/enum &#123; kVK_Return = 0x24, kVK_Tab = 0x30, kVK_Space = 0x31, kVK_Delete = 0x33, kVK_Escape = 0x35, kVK_Command = 0x37, kVK_Shift = 0x38, kVK_CapsLock = 0x39, kVK_Option = 0x3A, kVK_Control = 0x3B, kVK_RightCommand = 0x36, kVK_RightShift = 0x3C, kVK_RightOption = 0x3D, kVK_RightControl = 0x3E, kVK_Function = 0x3F, kVK_F17 = 0x40, kVK_VolumeUp = 0x48, kVK_VolumeDown = 0x49, kVK_Mute = 0x4A, kVK_F18 = 0x4F, kVK_F19 = 0x50, kVK_F20 = 0x5A, kVK_F5 = 0x60, kVK_F6 = 0x61, kVK_F7 = 0x62, kVK_F3 = 0x63, kVK_F8 = 0x64, kVK_F9 = 0x65, kVK_F11 = 0x67, kVK_F13 = 0x69, kVK_F16 = 0x6A, kVK_F14 = 0x6B, kVK_F10 = 0x6D, kVK_F12 = 0x6F, kVK_F15 = 0x71, kVK_Help = 0x72, kVK_Home = 0x73, kVK_PageUp = 0x74, kVK_ForwardDelete = 0x75, kVK_F4 = 0x76, kVK_End = 0x77, kVK_F2 = 0x78, kVK_PageDown = 0x79, kVK_F1 = 0x7A, kVK_LeftArrow = 0x7B, kVK_RightArrow = 0x7C, kVK_DownArrow = 0x7D, kVK_UpArrow = 0x7E&#125;;/* ISO keyboards only*/enum &#123; kVK_ISO_Section = 0x0A&#125;;/* JIS keyboards only*/enum &#123; kVK_JIS_Yen = 0x5D, kVK_JIS_Underscore = 0x5E, kVK_JIS_KeypadComma = 0x5F, kVK_JIS_Eisu = 0x66, kVK_JIS_Kana = 0x68&#125;;struct EventRecord &#123; EventKind what; unsigned long message; UInt32 when; Point where; EventModifiers modifiers;&#125;;typedef struct EventRecord EventRecord;typedef CALLBACK_API( void , FKEYProcPtr )(void);typedef STACK_UPP_TYPE(FKEYProcPtr) FKEYUPP;/* * NewFKEYUPP() * * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: available as macro/inline *//* * DisposeFKEYUPP() * * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: available as macro/inline *//* * InvokeFKEYUPP() * * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: available as macro/inline */#if !__LP64__/* * GetMouse() *** DEPRECATED *** * * Deprecated: * Use HIGetMousePosition instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void GetMouse(Point * mouseLoc) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5;#endif /* !__LP64__ *//* * Button() *** DEPRECATED *** * * Deprecated: * Use GetCurrentButtonState or GetCurrentEventButtonState instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework but deprecated in 10.6 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern Boolean Button(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6;#if !__LP64__/* * StillDown() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern Boolean StillDown(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;/* * WaitMouseUp() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern Boolean WaitMouseUp(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;/* * KeyTranslate() *** DEPRECATED *** * * Deprecated: * Use UCKeyTranslate instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.6 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern UInt32 KeyTranslate( const void * transData, UInt16 keycode, UInt32 * state) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6;/* * GetCaretTime() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern UInt32 GetCaretTime(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#endif /* !__LP64__ *//* QuickTime 3.0 supports GetKeys() on unix and win32 But, on little endian machines you will have to be careful about bit numberings and/or use a KeyMapByteArray instead.*/#if TARGET_API_MAC_OS8typedef UInt32 KeyMap[4];#elsetypedef BigEndianUInt32 KeyMap[4];#endif /* TARGET_API_MAC_OS8 */typedef UInt8 KeyMapByteArray[16];/* * GetKeys() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void GetKeys(KeyMap theKeys) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;/* Obsolete event types &amp; masks */enum &#123; networkEvt = 10, driverEvt = 11, app1Evt = 12, app2Evt = 13, app3Evt = 14, app4Evt = 15, networkMask = 0x0400, driverMask = 0x0800, app1Mask = 0x1000, app2Mask = 0x2000, app3Mask = 0x4000, app4Mask = 0x8000&#125;;struct EvQEl &#123; QElemPtr qLink; SInt16 qType; EventKind evtQWhat; /* this part is identical to the EventRecord as defined above */ unsigned long evtQMessage; UInt32 evtQWhen; Point evtQWhere; EventModifiers evtQModifiers;&#125;;typedef struct EvQEl EvQEl;typedef EvQEl * EvQElPtr;typedef CALLBACK_API( void , GetNextEventFilterProcPtr )(EventRecord *theEvent, Boolean *result);typedef STACK_UPP_TYPE(GetNextEventFilterProcPtr) GetNextEventFilterUPP;/* * NewGetNextEventFilterUPP() * * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: available as macro/inline *//* * DisposeGetNextEventFilterUPP() * * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: available as macro/inline *//* * InvokeGetNextEventFilterUPP() * * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: available as macro/inline */typedef GetNextEventFilterUPP GNEFilterUPP;#if !__LP64__/* * GetDblTime() * * Summary: * Returns the maximum time (in units of 1/60th of a second) allowed * between two consecutive mouse-down events in order for the second * click to be considered a double-click. * * Discussion: * In 64-bit applications, you may replace calls to this API with * calls to NXClickTime (declared in * &lt;IOKit/hidsystem/event_status_driver.h&gt;) or with +[NSEvent * doubleClickInterval] (available in Mac OS X 10.6 and later). * * Mac OS X threading: * Not thread safe * * Result: * The maximum time between mouse-downs allowed for a double-click. * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern UInt32 GetDblTime(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;/* * SetEventMask() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void SetEventMask(EventMask value) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;/* * GetNextEvent() *** DEPRECATED *** * * Deprecated: * Use ReceiveNextEvent instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.6 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern Boolean GetNextEvent( EventMask eventMask, EventRecord * theEvent) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6;/* * WaitNextEvent() *** DEPRECATED *** * * Deprecated: * Use ReceiveNextEvent instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.6 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern Boolean WaitNextEvent( EventMask eventMask, EventRecord * theEvent, UInt32 sleep, RgnHandle mouseRgn) /* can be NULL */ AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6;/* * EventAvail() *** DEPRECATED *** * * Deprecated: * Use FindSpecificEventInQueue instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.6 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern Boolean EventAvail( EventMask eventMask, EventRecord * theEvent) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6;/* * PostEvent() *** DEPRECATED *** * * Deprecated: * Use PostEventToQueue or CGEventPost instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.6 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern OSErr PostEvent( EventKind eventNum, UInt32 eventMsg) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6;#endif /* !__LP64__ *//* * FlushEvents() *** DEPRECATED *** * * Deprecated: * Use FlushEventsMatchingListFromQueue, * FlushSpecificEventsFromQueue, or FlushEventQueue instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework but deprecated in 10.6 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void FlushEvents( EventMask whichMask, EventMask stopMask) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6;#if OLDROUTINENAMES#define KeyTrans(transData, keycode, state) KeyTranslate(transData, keycode, state)#endif /* OLDROUTINENAMES */#if !__LP64__/* * KeyScript() *** DEPRECATED *** * * Deprecated: * Use TISSelectInputSource API for positive verbs (ScriptCode). * Use TSMDocument properties to restrict input sources: * kTSMDocumentEnabledInputSourcesPropertyTag * kTSMDocumentInputSourceOverridePropertyTag * * Summary: * Switch to the specified script&apos;s default (last used) input source. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] but deprecated in 10.5 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void KeyScript(short code) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5;#endif /* !__LP64__ *//* * IsCmdChar() *** DEPRECATED *** * * Deprecated: * Use IsUserCancelEventRef or CheckEventQueueForUserCancel instead. * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework but deprecated in 10.6 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern Boolean IsCmdChar( const EventRecord * event, short test) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_6;/* LowMem accessor functions previously in LowMem.h*//* * LMGetKeyThresh() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern SInt16 LMGetKeyThresh(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#if !__LP64__/* * LMSetKeyThresh() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void LMSetKeyThresh(SInt16 value) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#endif /* !__LP64__ *//* * LMGetKeyRepThresh() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern SInt16 LMGetKeyRepThresh(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#if !__LP64__/* * LMSetKeyRepThresh() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void LMSetKeyRepThresh(SInt16 value) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#endif /* !__LP64__ *//* * LMGetKbdLast() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern UInt8 LMGetKbdLast(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#if !__LP64__/* * LMSetKbdLast() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void LMSetKbdLast(UInt8 value) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#endif /* !__LP64__ *//* * LMGetKbdType() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern UInt8 LMGetKbdType(void) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#if !__LP64__/* * LMSetKbdType() * * Mac OS X threading: * Not thread safe * * Availability: * Mac OS X: in version 10.0 and later in Carbon.framework [32-bit only] * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later */extern void LMSetKbdType(UInt8 value) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER;#endif /* !__LP64__ */#pragma pack(pop)#ifdef __cplusplus&#125;#endif#endif /* __EVENTS__ */]]></content>
      <categories>
        <category>OC</category>
      </categories>
      <tags>
        <tag>Objective-C</tag>
        <tag>MacOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Xcode控制台调试命令]]></title>
    <url>%2F2018%2F01%2F10%2FXcode%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%B0%83%E8%AF%95%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Xcode编译器是LLVM 2.0，控制台调试命令前缀为lldb。 ##1、bt 显示所有的调用栈帧。该命令可用来显示函数的调用顺序。 ##2、po 输出对象 eg. po user ##3、kill 终止正在运行的程序 ##4、list 显示断点所处代码片段 ##5、next 等同于step over，跳转到下一步 ##6、print 输出表达式的值 eg. print 3*2 ##7、breakpoint 相关操作1234567891011121314151617181920212223242526clear -- Delete or disable breakpoints matching the specified source file and line.command -- Commands for adding, removing and listing LLDB commands executed when a breakpoint is hit.delete -- Delete the specified breakpoint(s). If no breakpoints are specified, delete them all.disable -- Disable the specified breakpoint(s) without deleting them. Ifnone are specified, disable all breakpoints.enable -- Enable the specified disabled breakpoint(s). If no breakpoints are specified, enable all of them.list -- List some or all breakpoints at configurable levels of detail.modify -- Modify the options on a breakpoint or set of breakpoints in the executable. If no breakpoint is specified, acts on the last created breakpoint. With the exception of -e, -d and -i,passing an empty argument clears the modification.name -- Commands to manage name tags for breakpointsread -- Read and set the breakpoints previously saved to a file with breakpoint write&quot;. set -- Sets a breakpoint or set of breakpoints in the executable. -M &lt;method&gt; ( --method &lt;method&gt; ) -S &lt;selector&gt; ( --selector &lt;selector&gt; ) -b &lt;function-name&gt; ( --basename &lt;function-name&gt; ) -f &lt;filename&gt; ( --file &lt;filename&gt; ) -l &lt;linenum&gt; ( --line &lt;linenum&gt; ) -n &lt;function-name&gt; ( --name &lt;function-name&gt; )write -- Write the breakpoints listed to a file that can be read in with &quot;breakpoint read&quot;. If given no arguments, writes all breakpoints. ##8、watchpoint 作为断点的补充，可以在不中断程序的情况下监测一些变量 12345678command -- Commands for adding, removing and examining LLDB commands executed when the watchpoint is hit (watchpoint &apos;commmands&apos;).delete -- Delete the specified watchpoint(s). If no watchpoints are specified, delete them all.disable -- Disable the specified watchpoint(s) without removing it/them. If no watchpoints are specified, disable them all.enable -- Enable the specified disabled watchpoint(s). If no watchpoints are specified, enable all of them.ignore -- Set ignore count on the specified watchpoint(s). If no watchpoints are specified, set them all.list -- List all watchpoints at configurable levels of detail.modify -- Modify the options on a watchpoint or set of watchpoints in the executable. If no watchpoint is specified, act on the last created watchpoint. Passing an empty argument clears the modification.set -- Commands for setting a watchpoint. 9、threadthread list 10、image list image lookup –address 0x0000000100000de0 查看奔溃代码位置 image lookup –type NSURL 查看具体的类型 11、命令别名 command alias bfl breakpoint set -f %1 -l %2 调用时使用 bf1 command unalias bf1 12、help 可以输出LLDB的所有顶层命令 后面可以跟某个特定命令，输出该命令的所有信息。eg. help breakpoint set apropos 可以进行关键字搜索，如apropos file 会以file为关键字查询LLDB文档 可以查看一个别名的原形 eg.help bf1 13、 14、 相关文章 AppleDocument]]></content>
      <categories>
        <category>OC</category>
      </categories>
      <tags>
        <tag>Objective-C</tag>
        <tag>Xcode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[NSPredicate]]></title>
    <url>%2F2018%2F01%2F10%2FNSPredicate%2F</url>
    <content type="text"><![CDATA[筛选 12NSPredicate * predicate = [NSPredicate predicateWithFormat:@&quot;length &gt; 3&quot;];NSLog(@&quot;%@&quot;, [array filteredArrayUsingPredicate:pre]); 对数组成员依次执行 length 方法，返回值进行判断，如值为1则加入新数组。下面代码则是调用integerValue方法 123NSArray *array = @[@&quot;2&quot;,@&quot;3&quot;,@&quot;4&quot;,@&quot;5&quot;];NSPredicate *pre = [NSPredicate predicateWithFormat:@&quot;integerValue &gt;= %@&quot;, @3];NSLog(@&quot;%@&quot;, [array filteredArrayUsingPredicate:pre]); 同样适用于对象 123456789101112131415161718192021User * user1 = [[User alloc]init];user1.name = &quot;Tom&quot;;user1.age = 24;User * user2 = [[User alloc]init];user2.name = &quot;Jack&quot;;user2.age = 19;User* user3 = [[User alloc]init];user3.name = &quot;Jason&quot;;user3.age = 32; NSArray * array = @[user1,user2,user3];NSPredicate *pre = [NSPredicate predicateWithFormat:@&quot;age &gt;= %@&quot;, @24];NSLog(@&quot;%@&quot;,[array filteredArrayUsingPredicate:pre]) NSPredicate *pre = [NSPredicate predicateWithFormat:@&quot;%@ &gt;= %@&quot;, @&quot;age&quot;,@24];此处的pre 为 &quot;age&quot; &gt;= 24明显是有问题的，因此要改为NSPredicate *pre = [NSPredicate predicateWithFormat:@&quot;%K &gt;= %@&quot;, @&quot;age&quot;,@24]; 此处%K代表是作为一个key值得占位符。 通配符 LIKE 正则表达式中的限制符基本都可以使用 *匹配前面字符任意次次 +匹配前面字符一次或多次 ?匹配前面字符零次或一次 （跟在其他限制符后面匹配非贪婪模式） [c] 忽略大小写 [d] 忽略重音符号 [cd]既不区分大小写，也不区分发音符号。 BEGINSWITH(已某个字符串开头, begins with) ENDSWITH(已某个字符串结尾, ends with) 12string = @&quot;abcd&quot;;NSPredicate *pre = [NSPredicate predicateWithFormat:@&quot;name LIKE[cd] %@&quot;, @&quot;?b*&quot;]; 关系运算符包括 IN、BETWEEN、AND(&amp;&amp;)、OR(||)、NOT（!） 1NSPredicate *pre = [NSPredicatepredicateWithFormat:@&quot;code IN %@&quot;, @[@1,@3]]; BETWEEN(之间) 通常用于判断NSNumber对象 判断 1&lt;=code&lt;=3 1NSPredicate *pred = [NSPredicate predicateWithFormat:@&quot;code BETWEEN &#123;1, 3&#125;&quot;]; 部分案例是否是邮箱 NSString *strRegex = @”[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{1,5}”; 是否是手机号 NSString *strRegex = @”[0-9]{1,20}”; http://www.jianshu.com/p/fe7a8e1317f6 http://www.bubuko.com/infodetail-1129405.html]]></content>
      <categories>
        <category>OC</category>
      </categories>
      <tags>
        <tag>Objective-C</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F1970%2F01%2F18%2F%E8%87%AA%E5%AE%9A%E4%B9%89DMG%E5%AE%89%E8%A3%85%E5%8C%85%2F</url>
    <content type="text"><![CDATA[自定义DMG安装包1、通过Xcode archive导出.app文件 2、进入文件夹，将plist等不希望展示给用户的文件删除 3、创建Application快捷方式，可在finder中创建快捷方式拖入文件夹，也可在Terminal中进入文件夹，键入 1ln -s /Applications 4、打开磁盘工具，点击左上角菜单，文件-新建-来自文件夹的映像 ​ 选择之前修改过的app文件所在文件夹，映像格式选择读和写​​ 5、生成dmg文件​​ 6、双击打开dmg文件​​ 7、右键文件夹空白处​​ ​​ 调整图标大小，设置背景图片。生成如下样式的安装包。​​ ​​ 在Terminal中输入defaults write com.apple.finder AppleShowAllFiles -bool true，然后重启finder，可以发现dmg文件夹中会出现隐藏文件。这些隐藏文件包括背景图片，以及其他打包时生成的配置文件。​​ 可以看到，QQ的策略是一直拖到了最下面，目前没有找到更好的办法，先采用这个办法。​​​​ 8.配置完成后，推出安装包。打开Terminal，进入dmg所在文件夹。​​ 12​ hdiutil convert -format UDZO -o newName.dmg oldName.dmg​ ​]]></content>
  </entry>
</search>
